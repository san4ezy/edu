swagger: '2.0'
info:
  title: REST API
  description: ''
  termsOfService: '...'
  contact:
    email: san4ezy@gmail.com
  version: v1
host: localhost:8110
schemes:
- http
basePath: /api/v1
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  JWT:
    type: jwt
security:
- JWT: []
paths:
  /events/events/:
    get:
      operationId: events_events_list
      description: ''
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Event'
      tags:
      - events
    post:
      operationId: events_events_create
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Event'
      tags:
      - events
    parameters: []
  /events/events/{id}/:
    get:
      operationId: events_events_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Event'
      tags:
      - events
    put:
      operationId: events_events_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Event'
      tags:
      - events
    patch:
      operationId: events_events_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/Event'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Event'
      tags:
      - events
    parameters:
    - name: id
      in: path
      description: A UUID string identifying this event.
      required: true
      type: string
      format: uuid
  /users/auth/signup/:
    post:
      operationId: users_auth_signup
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/SignupUser'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SignupUser'
      tags:
      - users
    parameters: []
  /users/auth/token/obtain/:
    post:
      operationId: users_auth_token_obtain_create
      description: |-
        This is a helper view for handling the JWT gears.
        Use it, if you need a power of JWT tokens with a payload inside.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/JWTObtainPair'
      tags:
      - users
    parameters: []
  /users/auth/token/refresh/:
    post:
      operationId: users_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
      - users
    parameters: []
  /users/auth/token/verification/:
    post:
      operationId: users_auth_token_verification_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/TokenVerify'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerify'
      tags:
      - users
    parameters: []
  /users/users/:
    get:
      operationId: users_users_list
      description: ''
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
      - users
    parameters: []
  /users/users/me/:
    get:
      operationId: users_users_me_read
      description: ''
      parameters:
      - name: search
        in: query
        description: A search term.
        required: false
        type: string
      - name: ordering
        in: query
        description: Which field to use when ordering the results.
        required: false
        type: string
      - name: limit
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: offset
        in: query
        description: The initial index from which to return the results.
        required: false
        type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
      - users
    patch:
      operationId: users_users_me_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    parameters: []
  /users/users/{id}/:
    get:
      operationId: users_users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    put:
      operationId: users_users_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    patch:
      operationId: users_users_partial_update
      description: ''
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
      - users
    parameters:
    - name: id
      in: path
      description: A UUID string identifying this user.
      required: true
      type: string
      format: uuid
definitions:
  Event:
    required:
    - name
    - team_id
    type: object
    properties:
      id:
        title: ID
        type: string
        format: uuid
      name:
        title: Name
        type: string
        maxLength: 128
        minLength: 1
      description:
        title: Description
        type: string
        x-nullable: true
      website:
        title: Website
        type: string
        format: uri
        maxLength: 200
        x-nullable: true
      contacts:
        title: Contacts
        type: string
        x-nullable: true
      team_id:
        title: Team id
        type: string
        format: uuid
  SignupUser:
    required:
    - phone_number
    - password
    - first_name
    - last_name
    type: object
    properties:
      id:
        title: ID
        type: string
        format: uuid
      phone_number:
        title: Phone number
        type: string
        maxLength: 32
      password:
        title: Password
        type: string
        maxLength: 128
      first_name:
        title: First name
        type: string
        maxLength: 64
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 64
        minLength: 1
  JWTObtainPair:
    required:
    - phone_number
    - password
    type: object
    properties:
      phone_number:
        title: Phone number
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
    - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  TokenVerify:
    required:
    - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  User:
    required:
    - first_name
    - last_name
    type: object
    properties:
      id:
        title: ID
        type: string
        format: uuid
      phone_number:
        title: Phone number
        type: string
        maxLength: 32
        x-nullable: true
      email:
        title: Email
        type: string
        format: email
        maxLength: 254
        x-nullable: true
      first_name:
        title: First name
        type: string
        maxLength: 64
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 64
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 128
